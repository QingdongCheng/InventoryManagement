$(document).ready(function() { window.subList = {}, window.shopList = {}, window.shopItem = {}, window.ids = {}, window.error_bar = $("#err-msg-bar"), window.type_list = $("#type-list"), makeColumns(getGroceries), $("#wrapper").on("click", "div.filled", function() { prepInfo(this) }), $(".gtype").click(function() { setType($(this).text()) }), $("#g-add").click(function() { addGrocery() }), $("#g-update").click(function() { updateGrocery() }), $("#g-delete").click(function() { delGrocery() }), $("#g-type").click(function() { getGroceryType() }) });
var getGroceries = function() { $(".shop-li").text(""), $(".filled").removeClass("filled"), $.ajax({ method: "GET", crossDomain: !0, url: "http://" + window.location.host + "/api/groceries/all/", success: function(e) { "string" == typeof e ? error_bar.text(e) : (shopList = e, type_list.text(JSON.stringify(shopList, void 0, 2)), $.each(e, function(e, t) { item = $("#item" + e), item.text(t.name), item.addClass("filled"), ids["item" + e] = t.id }), error_bar.text("")) }, error: function(e) { error_bar.text(e) } }), shopItem = {} },
    getGroceryType = function() { type = $("#grocery-type").text(), type.startsWith("Choose a type:") && (type = "*"), $.ajax({ method: "GET", crossDomain: !0, url: "http://" + window.location.host + "/api/groceries/" + type, success: function(e) { "string" == typeof e ? error_bar.text(e) : (subList = e, type_list.text(JSON.stringify(subList, void 0, 2)), error_bar.text("")) }, error: function(e) { error_bar.text(e) } }), shopItem = {} },
    addGrocery = function() { var e = $("#name").val(),
            t = $("#price").val(),
            r = $("#grocery-type").text().slice(0, -1); "" === e || "" === t || r.startsWith("Choose a type:") ? error_bar.text("Name, price, and type must be specified") : (error_bar.text(""), "" === $("#item9").text() ? $.ajax({ method: "POST", crossDomain: !0, url: "http://" + window.location.host + "/api/groceries/", data: { name: e, price: t, type: r }, success: function(e) { "Invalid POST" == e ? error_bar.text("Your post was insuccessful, are all the necessary fields filled out?") : getGroceries() }, error: function(e) { error_bar.text(e) } }) : error_bar.text("We're limiting the element count to 10 for this example")), shopItem = {} },
    updateGrocery = function() { if (shopItem.id) { var e = $("#name").val(),
                t = $("#price").val(),
                r = $("#grocery-type").text().slice(0, -1);
            e != shopItem.name || t != shopItem.price || r != shopItem.type ? r.startsWith("Choose a type:") ? error_bar.text("Type must be specified") : (error_bar.text(""), $.ajax({ method: "PUT", crossDomain: !0, url: "http://" + window.location.host + "/api/groceries/", data: { name: e, price: t, type: r, id: id }, success: function(e) { "Invalid PUT" == e ? error_bar.text("Your put was insuccessful, are all the fields filled out?") : (shopItem = {}, getGroceries()) }, error: function(e) { error_bar.text(e) } })) : error_bar.text("Please alter the item in some way") } else console.log("Please click on an item to update") },
    delGrocery = function() { shopItem.id ? (error_bar.text(""), $.ajax({ method: "DELETE", crossDomain: !0, url: "http://" + window.location.host + "/api/groceries/", data: { id: id }, success: function(e) { "Invalid DELETE" == e ? error_bar.text("Your delete was insuccessful, did you select an input?") : (shopItem = {}, getGroceries()) }, error: function(e) { error_bar.text(e) } })) : console.log("Please click on an item to delete") },
    setType = function(e) { $("#grocery-type").text(e + " ").append('<span class="caret"></span>'), shopItem.type = "Choose a type:" == e ? "" : e },
    makeColumns = function(e) { list = $("#list"), list.empty(); for (var t = 0; t < 10; t++) list.append('<div class="shop-el"><div class="shop-li" id="item' + t + '"></div></div>');
        e && e() },
    prepInfo = function(e) { id = ids[$(e).attr("id")], shopItem = shopList.find(function(e) { return e.id === id }), $("#name").val(shopItem.name), $("#price").val(shopItem.price), setType(shopItem.type) };